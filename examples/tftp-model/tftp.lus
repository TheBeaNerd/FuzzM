
-- 
-- Copyright (C) 2017, Rockwell Collins
-- All rights reserved.
-- 
-- This software may be modified and distributed under the terms
-- of the 3-clause BSD license.  See the LICENSE file for details.
-- 
type uint16 = int;

const tftp_max_payload_size : int = 514;

const opcode_wrq = 1;
const opcode_rrq = 2;
const opcode_data = 3;
const opcode_ack = 4;
const opcode_error = 5;

const mode_fuzzed = 0;
const mode_netascii = 1;
const mode_octet = 2;
const mode_mail = 3;

const ascii_uc_a = 65;
const ascii_uc_c = 67;
const ascii_uc_e = 69;
const ascii_uc_i = 73;
const ascii_uc_l = 76;
const ascii_uc_m = 77;
const ascii_uc_n = 78;
const ascii_uc_o = 79;
const ascii_uc_s = 83;
const ascii_uc_t = 84;

const ascii_lc_a = 97;
const ascii_lc_c = 99;
const ascii_lc_e = 101;
const ascii_lc_i = 105;
const ascii_lc_l = 108;
const ascii_lc_m = 109;
const ascii_lc_n = 110;
const ascii_lc_o = 111;
const ascii_lc_s = 115;
const ascii_lc_t = 116;

node historically(x: bool) returns (r: bool);
let
 r = x and (true -> (pre r));
tel

node once(x: bool) returns (r: bool);
let
 r = x or (false -> (pre r));
tel

type TftpPacket = struct
{
   opcode : uint16;
   payload : int[514]
};

function file_size() returns (r : int);
function filename_length() returns (r : int);
function mode_num() returns (r : int);
function mode_length() returns (r : int);
function error_msg_length(clock : int) returns (r : int);
function fuzz_block_number(clock : int) returns (r : bool);
function fuzz_block_size(clock : int) returns (r : bool);
function fuzzy_block_number(clock : int) returns (r : int);
function fuzzy_block_size(clock : int) returns (r : int);
function ascii_case(clock : int; offset : int) returns (r : int);

function payload(clock : int; addr : int) returns (r : int);

node mode_fuzzed_constraint(clock : int; offset : int) returns (r : bool);
let
 r = (payload(clock, offset + mode_length()) = 0);
tel

node mode_netascii_constraint(clock : int; offset : int) returns (r : bool);
let
 r = (mode_length() = 8)
     and (payload(clock, offset + 0) = ascii_uc_n + (ascii_case(clock, 0) * (ascii_lc_n - ascii_uc_n)))
     and (payload(clock, offset + 1) = ascii_uc_e + (ascii_case(clock, 1) * (ascii_lc_e - ascii_uc_e)))
     and (payload(clock, offset + 2) = ascii_uc_t + (ascii_case(clock, 2) * (ascii_lc_t - ascii_uc_t)))
     and (payload(clock, offset + 3) = ascii_uc_a + (ascii_case(clock, 3) * (ascii_lc_a - ascii_uc_a)))
     and (payload(clock, offset + 4) = ascii_uc_s + (ascii_case(clock, 4) * (ascii_lc_s - ascii_uc_s)))
     and (payload(clock, offset + 5) = ascii_uc_c + (ascii_case(clock, 5) * (ascii_lc_c - ascii_uc_c)))
     and (payload(clock, offset + 6) = ascii_uc_i + (ascii_case(clock, 6) * (ascii_lc_i - ascii_uc_i)))
     and (payload(clock, offset + 7) = ascii_uc_i + (ascii_case(clock, 7) * (ascii_lc_i - ascii_uc_i)))
     and (payload(clock, offset + mode_length()) = 0);
tel

node mode_octet_constraint(clock : int; offset : int) returns (r : bool);
let
 r = (mode_length() = 5)
     and (payload(clock, offset + 0) = ascii_uc_o + (ascii_case(clock, 0) * (ascii_lc_o - ascii_uc_o)))
     and (payload(clock, offset + 1) = ascii_uc_c + (ascii_case(clock, 1) * (ascii_lc_c - ascii_uc_c)))
     and (payload(clock, offset + 2) = ascii_uc_t + (ascii_case(clock, 2) * (ascii_lc_t - ascii_uc_t)))
     and (payload(clock, offset + 3) = ascii_uc_e + (ascii_case(clock, 3) * (ascii_lc_e - ascii_uc_e)))
     and (payload(clock, offset + 4) = ascii_uc_t + (ascii_case(clock, 4) * (ascii_lc_t - ascii_uc_t)))
     and (payload(clock, offset + mode_length()) = 0);
tel

node mode_mail_constraint(clock : int; offset : int) returns (r : bool);
let
 r = (mode_length() = 4)
     and (payload(clock, offset + 0) = ascii_uc_m + (ascii_case(clock, 0) * (ascii_lc_m - ascii_uc_m)))
     and (payload(clock, offset + 1) = ascii_uc_a + (ascii_case(clock, 1) * (ascii_lc_a - ascii_uc_a)))
     and (payload(clock, offset + 2) = ascii_uc_i + (ascii_case(clock, 2) * (ascii_lc_i - ascii_uc_i)))
     and (payload(clock, offset + 3) = ascii_uc_l + (ascii_case(clock, 3) * (ascii_lc_l - ascii_uc_l)))
     and (payload(clock, offset + mode_length()) = 0);
tel

node mode_constraint(clock : int; offset : int) returns (r : bool);
let
 r = if (mode_num() = mode_fuzzed) then mode_fuzzed_constraint(clock, offset)
     else if (mode_num() = mode_netascii) then mode_netascii_constraint(clock, offset)
         else if (mode_num() = mode_octet) then mode_octet_constraint(clock, offset)
             else if (mode_num() = mode_mail) then mode_mail_constraint(clock, offset)
                 else true;
tel

node main(msg: TftpPacket; payload_length : int) returns ();
var
 clock : int;
 block_number : int;
 current_size : int;
 remaining_size : int;
 rrq_constraint : bool;
 wrq_constraint : bool;
 data_constraint : bool;
 ack_constraint : bool;
 error_constraint : bool;
 fuzz_rrq : bool;
 fuzz_wrq : bool;
 fuzz_rrq_protocol : bool;
 fuzz_wrq_protocol : bool;
 fuzz_rrq_protocol_fuzzy_block_numbers : bool;
 fuzz_wrq_protocol_fuzzy_block_numbers : bool;
 fuzz_wrq_protocol_fuzzy_block_sizes : bool;
let
 clock = 0 -> ((pre clock) + 1);

 -- Input type assertions
 -- TODO: Fuzz overflowing the payload size

 -- Uninterpreted function assertions
 assert(0 <= msg.opcode and msg.opcode < 65536);
 assert(0 <= payload_length);
 assert(0 < file_size());
 assert(0 <= filename_length());
 assert(mode_fuzzed <= mode_num() and mode_num() <= mode_mail);
 assert(0 <= mode_length());
 assert(0 <= error_msg_length(clock));
 assert(0 <= fuzzy_block_number(clock) and fuzzy_block_number(clock) < 65536);
 assert(0 <= fuzzy_block_size(clock));
 assert(0 <= ascii_case(clock, 0) and ascii_case(clock, 0) <= 1);
 assert(0 <= ascii_case(clock, 1) and ascii_case(clock, 1) <= 1);
 assert(0 <= ascii_case(clock, 2) and ascii_case(clock, 2) <= 1);
 assert(0 <= ascii_case(clock, 3) and ascii_case(clock, 3) <= 1);
 assert(0 <= ascii_case(clock, 4) and ascii_case(clock, 4) <= 1);
 assert(0 <= ascii_case(clock, 5) and ascii_case(clock, 5) <= 1);
 assert(0 <= ascii_case(clock, 6) and ascii_case(clock, 6) <= 1);
 assert(0 <= ascii_case(clock, 7) and ascii_case(clock, 7) <= 1);
  assert(msg.payload[0] >= 0 and msg.payload[0] < 256);
  assert(msg.payload[1] >= 0 and msg.payload[1] < 256);
  assert(msg.payload[2] >= 0 and msg.payload[2] < 256);
  assert(msg.payload[3] >= 0 and msg.payload[3] < 256);
  assert(msg.payload[4] >= 0 and msg.payload[4] < 256);
  assert(msg.payload[5] >= 0 and msg.payload[5] < 256);
  assert(msg.payload[6] >= 0 and msg.payload[6] < 256);
  assert(msg.payload[7] >= 0 and msg.payload[7] < 256);
  assert(msg.payload[8] >= 0 and msg.payload[8] < 256);
  assert(msg.payload[9] >= 0 and msg.payload[9] < 256);
  assert(msg.payload[10] >= 0 and msg.payload[10] < 256);
  assert(msg.payload[11] >= 0 and msg.payload[11] < 256);
  assert(msg.payload[12] >= 0 and msg.payload[12] < 256);
  assert(msg.payload[13] >= 0 and msg.payload[13] < 256);
  assert(msg.payload[14] >= 0 and msg.payload[14] < 256);
  assert(msg.payload[15] >= 0 and msg.payload[15] < 256);
  assert(msg.payload[16] >= 0 and msg.payload[16] < 256);
  assert(msg.payload[17] >= 0 and msg.payload[17] < 256);
  assert(msg.payload[18] >= 0 and msg.payload[18] < 256);
  assert(msg.payload[19] >= 0 and msg.payload[19] < 256);
  assert(msg.payload[20] >= 0 and msg.payload[20] < 256);
  assert(msg.payload[21] >= 0 and msg.payload[21] < 256);
  assert(msg.payload[22] >= 0 and msg.payload[22] < 256);
  assert(msg.payload[23] >= 0 and msg.payload[23] < 256);
  assert(msg.payload[24] >= 0 and msg.payload[24] < 256);
  assert(msg.payload[25] >= 0 and msg.payload[25] < 256);
  assert(msg.payload[26] >= 0 and msg.payload[26] < 256);
  assert(msg.payload[27] >= 0 and msg.payload[27] < 256);
  assert(msg.payload[28] >= 0 and msg.payload[28] < 256);
  assert(msg.payload[29] >= 0 and msg.payload[29] < 256);
  assert(msg.payload[30] >= 0 and msg.payload[30] < 256);
  assert(msg.payload[31] >= 0 and msg.payload[31] < 256);
  assert(msg.payload[32] >= 0 and msg.payload[32] < 256);
  assert(msg.payload[33] >= 0 and msg.payload[33] < 256);
  assert(msg.payload[34] >= 0 and msg.payload[34] < 256);
  assert(msg.payload[35] >= 0 and msg.payload[35] < 256);
  assert(msg.payload[36] >= 0 and msg.payload[36] < 256);
  assert(msg.payload[37] >= 0 and msg.payload[37] < 256);
  assert(msg.payload[38] >= 0 and msg.payload[38] < 256);
  assert(msg.payload[39] >= 0 and msg.payload[39] < 256);
  assert(msg.payload[40] >= 0 and msg.payload[40] < 256);
  assert(msg.payload[41] >= 0 and msg.payload[41] < 256);
  assert(msg.payload[42] >= 0 and msg.payload[42] < 256);
  assert(msg.payload[43] >= 0 and msg.payload[43] < 256);
  assert(msg.payload[44] >= 0 and msg.payload[44] < 256);
  assert(msg.payload[45] >= 0 and msg.payload[45] < 256);
  assert(msg.payload[46] >= 0 and msg.payload[46] < 256);
  assert(msg.payload[47] >= 0 and msg.payload[47] < 256);
  assert(msg.payload[48] >= 0 and msg.payload[48] < 256);
  assert(msg.payload[49] >= 0 and msg.payload[49] < 256);
  assert(msg.payload[50] >= 0 and msg.payload[50] < 256);
  assert(msg.payload[51] >= 0 and msg.payload[51] < 256);
  assert(msg.payload[52] >= 0 and msg.payload[52] < 256);
  assert(msg.payload[53] >= 0 and msg.payload[53] < 256);
  assert(msg.payload[54] >= 0 and msg.payload[54] < 256);
  assert(msg.payload[55] >= 0 and msg.payload[55] < 256);
  assert(msg.payload[56] >= 0 and msg.payload[56] < 256);
  assert(msg.payload[57] >= 0 and msg.payload[57] < 256);
  assert(msg.payload[58] >= 0 and msg.payload[58] < 256);
  assert(msg.payload[59] >= 0 and msg.payload[59] < 256);
  assert(msg.payload[60] >= 0 and msg.payload[60] < 256);
  assert(msg.payload[61] >= 0 and msg.payload[61] < 256);
  assert(msg.payload[62] >= 0 and msg.payload[62] < 256);
  assert(msg.payload[63] >= 0 and msg.payload[63] < 256);
  assert(msg.payload[64] >= 0 and msg.payload[64] < 256);
  assert(msg.payload[65] >= 0 and msg.payload[65] < 256);
  assert(msg.payload[66] >= 0 and msg.payload[66] < 256);
  assert(msg.payload[67] >= 0 and msg.payload[67] < 256);
  assert(msg.payload[68] >= 0 and msg.payload[68] < 256);
  assert(msg.payload[69] >= 0 and msg.payload[69] < 256);
  assert(msg.payload[70] >= 0 and msg.payload[70] < 256);
  assert(msg.payload[71] >= 0 and msg.payload[71] < 256);
  assert(msg.payload[72] >= 0 and msg.payload[72] < 256);
  assert(msg.payload[73] >= 0 and msg.payload[73] < 256);
  assert(msg.payload[74] >= 0 and msg.payload[74] < 256);
  assert(msg.payload[75] >= 0 and msg.payload[75] < 256);
  assert(msg.payload[76] >= 0 and msg.payload[76] < 256);
  assert(msg.payload[77] >= 0 and msg.payload[77] < 256);
  assert(msg.payload[78] >= 0 and msg.payload[78] < 256);
  assert(msg.payload[79] >= 0 and msg.payload[79] < 256);
  assert(msg.payload[80] >= 0 and msg.payload[80] < 256);
  assert(msg.payload[81] >= 0 and msg.payload[81] < 256);
  assert(msg.payload[82] >= 0 and msg.payload[82] < 256);
  assert(msg.payload[83] >= 0 and msg.payload[83] < 256);
  assert(msg.payload[84] >= 0 and msg.payload[84] < 256);
  assert(msg.payload[85] >= 0 and msg.payload[85] < 256);
  assert(msg.payload[86] >= 0 and msg.payload[86] < 256);
  assert(msg.payload[87] >= 0 and msg.payload[87] < 256);
  assert(msg.payload[88] >= 0 and msg.payload[88] < 256);
  assert(msg.payload[89] >= 0 and msg.payload[89] < 256);
  assert(msg.payload[90] >= 0 and msg.payload[90] < 256);
  assert(msg.payload[91] >= 0 and msg.payload[91] < 256);
  assert(msg.payload[92] >= 0 and msg.payload[92] < 256);
  assert(msg.payload[93] >= 0 and msg.payload[93] < 256);
  assert(msg.payload[94] >= 0 and msg.payload[94] < 256);
  assert(msg.payload[95] >= 0 and msg.payload[95] < 256);
  assert(msg.payload[96] >= 0 and msg.payload[96] < 256);
  assert(msg.payload[97] >= 0 and msg.payload[97] < 256);
  assert(msg.payload[98] >= 0 and msg.payload[98] < 256);
  assert(msg.payload[99] >= 0 and msg.payload[99] < 256);
  assert(msg.payload[100] >= 0 and msg.payload[100] < 256);
  assert(msg.payload[101] >= 0 and msg.payload[101] < 256);
  assert(msg.payload[102] >= 0 and msg.payload[102] < 256);
  assert(msg.payload[103] >= 0 and msg.payload[103] < 256);
  assert(msg.payload[104] >= 0 and msg.payload[104] < 256);
  assert(msg.payload[105] >= 0 and msg.payload[105] < 256);
  assert(msg.payload[106] >= 0 and msg.payload[106] < 256);
  assert(msg.payload[107] >= 0 and msg.payload[107] < 256);
  assert(msg.payload[108] >= 0 and msg.payload[108] < 256);
  assert(msg.payload[109] >= 0 and msg.payload[109] < 256);
  assert(msg.payload[110] >= 0 and msg.payload[110] < 256);
  assert(msg.payload[111] >= 0 and msg.payload[111] < 256);
  assert(msg.payload[112] >= 0 and msg.payload[112] < 256);
  assert(msg.payload[113] >= 0 and msg.payload[113] < 256);
  assert(msg.payload[114] >= 0 and msg.payload[114] < 256);
  assert(msg.payload[115] >= 0 and msg.payload[115] < 256);
  assert(msg.payload[116] >= 0 and msg.payload[116] < 256);
  assert(msg.payload[117] >= 0 and msg.payload[117] < 256);
  assert(msg.payload[118] >= 0 and msg.payload[118] < 256);
  assert(msg.payload[119] >= 0 and msg.payload[119] < 256);
  assert(msg.payload[120] >= 0 and msg.payload[120] < 256);
  assert(msg.payload[121] >= 0 and msg.payload[121] < 256);
  assert(msg.payload[122] >= 0 and msg.payload[122] < 256);
  assert(msg.payload[123] >= 0 and msg.payload[123] < 256);
  assert(msg.payload[124] >= 0 and msg.payload[124] < 256);
  assert(msg.payload[125] >= 0 and msg.payload[125] < 256);
  assert(msg.payload[126] >= 0 and msg.payload[126] < 256);
  assert(msg.payload[127] >= 0 and msg.payload[127] < 256);
  assert(msg.payload[128] >= 0 and msg.payload[128] < 256);
  assert(msg.payload[129] >= 0 and msg.payload[129] < 256);
  assert(msg.payload[130] >= 0 and msg.payload[130] < 256);
  assert(msg.payload[131] >= 0 and msg.payload[131] < 256);
  assert(msg.payload[132] >= 0 and msg.payload[132] < 256);
  assert(msg.payload[133] >= 0 and msg.payload[133] < 256);
  assert(msg.payload[134] >= 0 and msg.payload[134] < 256);
  assert(msg.payload[135] >= 0 and msg.payload[135] < 256);
  assert(msg.payload[136] >= 0 and msg.payload[136] < 256);
  assert(msg.payload[137] >= 0 and msg.payload[137] < 256);
  assert(msg.payload[138] >= 0 and msg.payload[138] < 256);
  assert(msg.payload[139] >= 0 and msg.payload[139] < 256);
  assert(msg.payload[140] >= 0 and msg.payload[140] < 256);
  assert(msg.payload[141] >= 0 and msg.payload[141] < 256);
  assert(msg.payload[142] >= 0 and msg.payload[142] < 256);
  assert(msg.payload[143] >= 0 and msg.payload[143] < 256);
  assert(msg.payload[144] >= 0 and msg.payload[144] < 256);
  assert(msg.payload[145] >= 0 and msg.payload[145] < 256);
  assert(msg.payload[146] >= 0 and msg.payload[146] < 256);
  assert(msg.payload[147] >= 0 and msg.payload[147] < 256);
  assert(msg.payload[148] >= 0 and msg.payload[148] < 256);
  assert(msg.payload[149] >= 0 and msg.payload[149] < 256);
  assert(msg.payload[150] >= 0 and msg.payload[150] < 256);
  assert(msg.payload[151] >= 0 and msg.payload[151] < 256);
  assert(msg.payload[152] >= 0 and msg.payload[152] < 256);
  assert(msg.payload[153] >= 0 and msg.payload[153] < 256);
  assert(msg.payload[154] >= 0 and msg.payload[154] < 256);
  assert(msg.payload[155] >= 0 and msg.payload[155] < 256);
  assert(msg.payload[156] >= 0 and msg.payload[156] < 256);
  assert(msg.payload[157] >= 0 and msg.payload[157] < 256);
  assert(msg.payload[158] >= 0 and msg.payload[158] < 256);
  assert(msg.payload[159] >= 0 and msg.payload[159] < 256);
  assert(msg.payload[160] >= 0 and msg.payload[160] < 256);
  assert(msg.payload[161] >= 0 and msg.payload[161] < 256);
  assert(msg.payload[162] >= 0 and msg.payload[162] < 256);
  assert(msg.payload[163] >= 0 and msg.payload[163] < 256);
  assert(msg.payload[164] >= 0 and msg.payload[164] < 256);
  assert(msg.payload[165] >= 0 and msg.payload[165] < 256);
  assert(msg.payload[166] >= 0 and msg.payload[166] < 256);
  assert(msg.payload[167] >= 0 and msg.payload[167] < 256);
  assert(msg.payload[168] >= 0 and msg.payload[168] < 256);
  assert(msg.payload[169] >= 0 and msg.payload[169] < 256);
  assert(msg.payload[170] >= 0 and msg.payload[170] < 256);
  assert(msg.payload[171] >= 0 and msg.payload[171] < 256);
  assert(msg.payload[172] >= 0 and msg.payload[172] < 256);
  assert(msg.payload[173] >= 0 and msg.payload[173] < 256);
  assert(msg.payload[174] >= 0 and msg.payload[174] < 256);
  assert(msg.payload[175] >= 0 and msg.payload[175] < 256);
  assert(msg.payload[176] >= 0 and msg.payload[176] < 256);
  assert(msg.payload[177] >= 0 and msg.payload[177] < 256);
  assert(msg.payload[178] >= 0 and msg.payload[178] < 256);
  assert(msg.payload[179] >= 0 and msg.payload[179] < 256);
  assert(msg.payload[180] >= 0 and msg.payload[180] < 256);
  assert(msg.payload[181] >= 0 and msg.payload[181] < 256);
  assert(msg.payload[182] >= 0 and msg.payload[182] < 256);
  assert(msg.payload[183] >= 0 and msg.payload[183] < 256);
  assert(msg.payload[184] >= 0 and msg.payload[184] < 256);
  assert(msg.payload[185] >= 0 and msg.payload[185] < 256);
  assert(msg.payload[186] >= 0 and msg.payload[186] < 256);
  assert(msg.payload[187] >= 0 and msg.payload[187] < 256);
  assert(msg.payload[188] >= 0 and msg.payload[188] < 256);
  assert(msg.payload[189] >= 0 and msg.payload[189] < 256);
  assert(msg.payload[190] >= 0 and msg.payload[190] < 256);
  assert(msg.payload[191] >= 0 and msg.payload[191] < 256);
  assert(msg.payload[192] >= 0 and msg.payload[192] < 256);
  assert(msg.payload[193] >= 0 and msg.payload[193] < 256);
  assert(msg.payload[194] >= 0 and msg.payload[194] < 256);
  assert(msg.payload[195] >= 0 and msg.payload[195] < 256);
  assert(msg.payload[196] >= 0 and msg.payload[196] < 256);
  assert(msg.payload[197] >= 0 and msg.payload[197] < 256);
  assert(msg.payload[198] >= 0 and msg.payload[198] < 256);
  assert(msg.payload[199] >= 0 and msg.payload[199] < 256);
  assert(msg.payload[200] >= 0 and msg.payload[200] < 256);
  assert(msg.payload[201] >= 0 and msg.payload[201] < 256);
  assert(msg.payload[202] >= 0 and msg.payload[202] < 256);
  assert(msg.payload[203] >= 0 and msg.payload[203] < 256);
  assert(msg.payload[204] >= 0 and msg.payload[204] < 256);
  assert(msg.payload[205] >= 0 and msg.payload[205] < 256);
  assert(msg.payload[206] >= 0 and msg.payload[206] < 256);
  assert(msg.payload[207] >= 0 and msg.payload[207] < 256);
  assert(msg.payload[208] >= 0 and msg.payload[208] < 256);
  assert(msg.payload[209] >= 0 and msg.payload[209] < 256);
  assert(msg.payload[210] >= 0 and msg.payload[210] < 256);
  assert(msg.payload[211] >= 0 and msg.payload[211] < 256);
  assert(msg.payload[212] >= 0 and msg.payload[212] < 256);
  assert(msg.payload[213] >= 0 and msg.payload[213] < 256);
  assert(msg.payload[214] >= 0 and msg.payload[214] < 256);
  assert(msg.payload[215] >= 0 and msg.payload[215] < 256);
  assert(msg.payload[216] >= 0 and msg.payload[216] < 256);
  assert(msg.payload[217] >= 0 and msg.payload[217] < 256);
  assert(msg.payload[218] >= 0 and msg.payload[218] < 256);
  assert(msg.payload[219] >= 0 and msg.payload[219] < 256);
  assert(msg.payload[220] >= 0 and msg.payload[220] < 256);
  assert(msg.payload[221] >= 0 and msg.payload[221] < 256);
  assert(msg.payload[222] >= 0 and msg.payload[222] < 256);
  assert(msg.payload[223] >= 0 and msg.payload[223] < 256);
  assert(msg.payload[224] >= 0 and msg.payload[224] < 256);
  assert(msg.payload[225] >= 0 and msg.payload[225] < 256);
  assert(msg.payload[226] >= 0 and msg.payload[226] < 256);
  assert(msg.payload[227] >= 0 and msg.payload[227] < 256);
  assert(msg.payload[228] >= 0 and msg.payload[228] < 256);
  assert(msg.payload[229] >= 0 and msg.payload[229] < 256);
  assert(msg.payload[230] >= 0 and msg.payload[230] < 256);
  assert(msg.payload[231] >= 0 and msg.payload[231] < 256);
  assert(msg.payload[232] >= 0 and msg.payload[232] < 256);
  assert(msg.payload[233] >= 0 and msg.payload[233] < 256);
  assert(msg.payload[234] >= 0 and msg.payload[234] < 256);
  assert(msg.payload[235] >= 0 and msg.payload[235] < 256);
  assert(msg.payload[236] >= 0 and msg.payload[236] < 256);
  assert(msg.payload[237] >= 0 and msg.payload[237] < 256);
  assert(msg.payload[238] >= 0 and msg.payload[238] < 256);
  assert(msg.payload[239] >= 0 and msg.payload[239] < 256);
  assert(msg.payload[240] >= 0 and msg.payload[240] < 256);
  assert(msg.payload[241] >= 0 and msg.payload[241] < 256);
  assert(msg.payload[242] >= 0 and msg.payload[242] < 256);
  assert(msg.payload[243] >= 0 and msg.payload[243] < 256);
  assert(msg.payload[244] >= 0 and msg.payload[244] < 256);
  assert(msg.payload[245] >= 0 and msg.payload[245] < 256);
  assert(msg.payload[246] >= 0 and msg.payload[246] < 256);
  assert(msg.payload[247] >= 0 and msg.payload[247] < 256);
  assert(msg.payload[248] >= 0 and msg.payload[248] < 256);
  assert(msg.payload[249] >= 0 and msg.payload[249] < 256);
  assert(msg.payload[250] >= 0 and msg.payload[250] < 256);
  assert(msg.payload[251] >= 0 and msg.payload[251] < 256);
  assert(msg.payload[252] >= 0 and msg.payload[252] < 256);
  assert(msg.payload[253] >= 0 and msg.payload[253] < 256);
  assert(msg.payload[254] >= 0 and msg.payload[254] < 256);
  assert(msg.payload[255] >= 0 and msg.payload[255] < 256);
  assert(msg.payload[256] >= 0 and msg.payload[256] < 256);
  assert(msg.payload[257] >= 0 and msg.payload[257] < 256);
  assert(msg.payload[258] >= 0 and msg.payload[258] < 256);
  assert(msg.payload[259] >= 0 and msg.payload[259] < 256);
  assert(msg.payload[260] >= 0 and msg.payload[260] < 256);
  assert(msg.payload[261] >= 0 and msg.payload[261] < 256);
  assert(msg.payload[262] >= 0 and msg.payload[262] < 256);
  assert(msg.payload[263] >= 0 and msg.payload[263] < 256);
  assert(msg.payload[264] >= 0 and msg.payload[264] < 256);
  assert(msg.payload[265] >= 0 and msg.payload[265] < 256);
  assert(msg.payload[266] >= 0 and msg.payload[266] < 256);
  assert(msg.payload[267] >= 0 and msg.payload[267] < 256);
  assert(msg.payload[268] >= 0 and msg.payload[268] < 256);
  assert(msg.payload[269] >= 0 and msg.payload[269] < 256);
  assert(msg.payload[270] >= 0 and msg.payload[270] < 256);
  assert(msg.payload[271] >= 0 and msg.payload[271] < 256);
  assert(msg.payload[272] >= 0 and msg.payload[272] < 256);
  assert(msg.payload[273] >= 0 and msg.payload[273] < 256);
  assert(msg.payload[274] >= 0 and msg.payload[274] < 256);
  assert(msg.payload[275] >= 0 and msg.payload[275] < 256);
  assert(msg.payload[276] >= 0 and msg.payload[276] < 256);
  assert(msg.payload[277] >= 0 and msg.payload[277] < 256);
  assert(msg.payload[278] >= 0 and msg.payload[278] < 256);
  assert(msg.payload[279] >= 0 and msg.payload[279] < 256);
  assert(msg.payload[280] >= 0 and msg.payload[280] < 256);
  assert(msg.payload[281] >= 0 and msg.payload[281] < 256);
  assert(msg.payload[282] >= 0 and msg.payload[282] < 256);
  assert(msg.payload[283] >= 0 and msg.payload[283] < 256);
  assert(msg.payload[284] >= 0 and msg.payload[284] < 256);
  assert(msg.payload[285] >= 0 and msg.payload[285] < 256);
  assert(msg.payload[286] >= 0 and msg.payload[286] < 256);
  assert(msg.payload[287] >= 0 and msg.payload[287] < 256);
  assert(msg.payload[288] >= 0 and msg.payload[288] < 256);
  assert(msg.payload[289] >= 0 and msg.payload[289] < 256);
  assert(msg.payload[290] >= 0 and msg.payload[290] < 256);
  assert(msg.payload[291] >= 0 and msg.payload[291] < 256);
  assert(msg.payload[292] >= 0 and msg.payload[292] < 256);
  assert(msg.payload[293] >= 0 and msg.payload[293] < 256);
  assert(msg.payload[294] >= 0 and msg.payload[294] < 256);
  assert(msg.payload[295] >= 0 and msg.payload[295] < 256);
  assert(msg.payload[296] >= 0 and msg.payload[296] < 256);
  assert(msg.payload[297] >= 0 and msg.payload[297] < 256);
  assert(msg.payload[298] >= 0 and msg.payload[298] < 256);
  assert(msg.payload[299] >= 0 and msg.payload[299] < 256);
  assert(msg.payload[300] >= 0 and msg.payload[300] < 256);
  assert(msg.payload[301] >= 0 and msg.payload[301] < 256);
  assert(msg.payload[302] >= 0 and msg.payload[302] < 256);
  assert(msg.payload[303] >= 0 and msg.payload[303] < 256);
  assert(msg.payload[304] >= 0 and msg.payload[304] < 256);
  assert(msg.payload[305] >= 0 and msg.payload[305] < 256);
  assert(msg.payload[306] >= 0 and msg.payload[306] < 256);
  assert(msg.payload[307] >= 0 and msg.payload[307] < 256);
  assert(msg.payload[308] >= 0 and msg.payload[308] < 256);
  assert(msg.payload[309] >= 0 and msg.payload[309] < 256);
  assert(msg.payload[310] >= 0 and msg.payload[310] < 256);
  assert(msg.payload[311] >= 0 and msg.payload[311] < 256);
  assert(msg.payload[312] >= 0 and msg.payload[312] < 256);
  assert(msg.payload[313] >= 0 and msg.payload[313] < 256);
  assert(msg.payload[314] >= 0 and msg.payload[314] < 256);
  assert(msg.payload[315] >= 0 and msg.payload[315] < 256);
  assert(msg.payload[316] >= 0 and msg.payload[316] < 256);
  assert(msg.payload[317] >= 0 and msg.payload[317] < 256);
  assert(msg.payload[318] >= 0 and msg.payload[318] < 256);
  assert(msg.payload[319] >= 0 and msg.payload[319] < 256);
  assert(msg.payload[320] >= 0 and msg.payload[320] < 256);
  assert(msg.payload[321] >= 0 and msg.payload[321] < 256);
  assert(msg.payload[322] >= 0 and msg.payload[322] < 256);
  assert(msg.payload[323] >= 0 and msg.payload[323] < 256);
  assert(msg.payload[324] >= 0 and msg.payload[324] < 256);
  assert(msg.payload[325] >= 0 and msg.payload[325] < 256);
  assert(msg.payload[326] >= 0 and msg.payload[326] < 256);
  assert(msg.payload[327] >= 0 and msg.payload[327] < 256);
  assert(msg.payload[328] >= 0 and msg.payload[328] < 256);
  assert(msg.payload[329] >= 0 and msg.payload[329] < 256);
  assert(msg.payload[330] >= 0 and msg.payload[330] < 256);
  assert(msg.payload[331] >= 0 and msg.payload[331] < 256);
  assert(msg.payload[332] >= 0 and msg.payload[332] < 256);
  assert(msg.payload[333] >= 0 and msg.payload[333] < 256);
  assert(msg.payload[334] >= 0 and msg.payload[334] < 256);
  assert(msg.payload[335] >= 0 and msg.payload[335] < 256);
  assert(msg.payload[336] >= 0 and msg.payload[336] < 256);
  assert(msg.payload[337] >= 0 and msg.payload[337] < 256);
  assert(msg.payload[338] >= 0 and msg.payload[338] < 256);
  assert(msg.payload[339] >= 0 and msg.payload[339] < 256);
  assert(msg.payload[340] >= 0 and msg.payload[340] < 256);
  assert(msg.payload[341] >= 0 and msg.payload[341] < 256);
  assert(msg.payload[342] >= 0 and msg.payload[342] < 256);
  assert(msg.payload[343] >= 0 and msg.payload[343] < 256);
  assert(msg.payload[344] >= 0 and msg.payload[344] < 256);
  assert(msg.payload[345] >= 0 and msg.payload[345] < 256);
  assert(msg.payload[346] >= 0 and msg.payload[346] < 256);
  assert(msg.payload[347] >= 0 and msg.payload[347] < 256);
  assert(msg.payload[348] >= 0 and msg.payload[348] < 256);
  assert(msg.payload[349] >= 0 and msg.payload[349] < 256);
  assert(msg.payload[350] >= 0 and msg.payload[350] < 256);
  assert(msg.payload[351] >= 0 and msg.payload[351] < 256);
  assert(msg.payload[352] >= 0 and msg.payload[352] < 256);
  assert(msg.payload[353] >= 0 and msg.payload[353] < 256);
  assert(msg.payload[354] >= 0 and msg.payload[354] < 256);
  assert(msg.payload[355] >= 0 and msg.payload[355] < 256);
  assert(msg.payload[356] >= 0 and msg.payload[356] < 256);
  assert(msg.payload[357] >= 0 and msg.payload[357] < 256);
  assert(msg.payload[358] >= 0 and msg.payload[358] < 256);
  assert(msg.payload[359] >= 0 and msg.payload[359] < 256);
  assert(msg.payload[360] >= 0 and msg.payload[360] < 256);
  assert(msg.payload[361] >= 0 and msg.payload[361] < 256);
  assert(msg.payload[362] >= 0 and msg.payload[362] < 256);
  assert(msg.payload[363] >= 0 and msg.payload[363] < 256);
  assert(msg.payload[364] >= 0 and msg.payload[364] < 256);
  assert(msg.payload[365] >= 0 and msg.payload[365] < 256);
  assert(msg.payload[366] >= 0 and msg.payload[366] < 256);
  assert(msg.payload[367] >= 0 and msg.payload[367] < 256);
  assert(msg.payload[368] >= 0 and msg.payload[368] < 256);
  assert(msg.payload[369] >= 0 and msg.payload[369] < 256);
  assert(msg.payload[370] >= 0 and msg.payload[370] < 256);
  assert(msg.payload[371] >= 0 and msg.payload[371] < 256);
  assert(msg.payload[372] >= 0 and msg.payload[372] < 256);
  assert(msg.payload[373] >= 0 and msg.payload[373] < 256);
  assert(msg.payload[374] >= 0 and msg.payload[374] < 256);
  assert(msg.payload[375] >= 0 and msg.payload[375] < 256);
  assert(msg.payload[376] >= 0 and msg.payload[376] < 256);
  assert(msg.payload[377] >= 0 and msg.payload[377] < 256);
  assert(msg.payload[378] >= 0 and msg.payload[378] < 256);
  assert(msg.payload[379] >= 0 and msg.payload[379] < 256);
  assert(msg.payload[380] >= 0 and msg.payload[380] < 256);
  assert(msg.payload[381] >= 0 and msg.payload[381] < 256);
  assert(msg.payload[382] >= 0 and msg.payload[382] < 256);
  assert(msg.payload[383] >= 0 and msg.payload[383] < 256);
  assert(msg.payload[384] >= 0 and msg.payload[384] < 256);
  assert(msg.payload[385] >= 0 and msg.payload[385] < 256);
  assert(msg.payload[386] >= 0 and msg.payload[386] < 256);
  assert(msg.payload[387] >= 0 and msg.payload[387] < 256);
  assert(msg.payload[388] >= 0 and msg.payload[388] < 256);
  assert(msg.payload[389] >= 0 and msg.payload[389] < 256);
  assert(msg.payload[390] >= 0 and msg.payload[390] < 256);
  assert(msg.payload[391] >= 0 and msg.payload[391] < 256);
  assert(msg.payload[392] >= 0 and msg.payload[392] < 256);
  assert(msg.payload[393] >= 0 and msg.payload[393] < 256);
  assert(msg.payload[394] >= 0 and msg.payload[394] < 256);
  assert(msg.payload[395] >= 0 and msg.payload[395] < 256);
  assert(msg.payload[396] >= 0 and msg.payload[396] < 256);
  assert(msg.payload[397] >= 0 and msg.payload[397] < 256);
  assert(msg.payload[398] >= 0 and msg.payload[398] < 256);
  assert(msg.payload[399] >= 0 and msg.payload[399] < 256);
  assert(msg.payload[400] >= 0 and msg.payload[400] < 256);
  assert(msg.payload[401] >= 0 and msg.payload[401] < 256);
  assert(msg.payload[402] >= 0 and msg.payload[402] < 256);
  assert(msg.payload[403] >= 0 and msg.payload[403] < 256);
  assert(msg.payload[404] >= 0 and msg.payload[404] < 256);
  assert(msg.payload[405] >= 0 and msg.payload[405] < 256);
  assert(msg.payload[406] >= 0 and msg.payload[406] < 256);
  assert(msg.payload[407] >= 0 and msg.payload[407] < 256);
  assert(msg.payload[408] >= 0 and msg.payload[408] < 256);
  assert(msg.payload[409] >= 0 and msg.payload[409] < 256);
  assert(msg.payload[410] >= 0 and msg.payload[410] < 256);
  assert(msg.payload[411] >= 0 and msg.payload[411] < 256);
  assert(msg.payload[412] >= 0 and msg.payload[412] < 256);
  assert(msg.payload[413] >= 0 and msg.payload[413] < 256);
  assert(msg.payload[414] >= 0 and msg.payload[414] < 256);
  assert(msg.payload[415] >= 0 and msg.payload[415] < 256);
  assert(msg.payload[416] >= 0 and msg.payload[416] < 256);
  assert(msg.payload[417] >= 0 and msg.payload[417] < 256);
  assert(msg.payload[418] >= 0 and msg.payload[418] < 256);
  assert(msg.payload[419] >= 0 and msg.payload[419] < 256);
  assert(msg.payload[420] >= 0 and msg.payload[420] < 256);
  assert(msg.payload[421] >= 0 and msg.payload[421] < 256);
  assert(msg.payload[422] >= 0 and msg.payload[422] < 256);
  assert(msg.payload[423] >= 0 and msg.payload[423] < 256);
  assert(msg.payload[424] >= 0 and msg.payload[424] < 256);
  assert(msg.payload[425] >= 0 and msg.payload[425] < 256);
  assert(msg.payload[426] >= 0 and msg.payload[426] < 256);
  assert(msg.payload[427] >= 0 and msg.payload[427] < 256);
  assert(msg.payload[428] >= 0 and msg.payload[428] < 256);
  assert(msg.payload[429] >= 0 and msg.payload[429] < 256);
  assert(msg.payload[430] >= 0 and msg.payload[430] < 256);
  assert(msg.payload[431] >= 0 and msg.payload[431] < 256);
  assert(msg.payload[432] >= 0 and msg.payload[432] < 256);
  assert(msg.payload[433] >= 0 and msg.payload[433] < 256);
  assert(msg.payload[434] >= 0 and msg.payload[434] < 256);
  assert(msg.payload[435] >= 0 and msg.payload[435] < 256);
  assert(msg.payload[436] >= 0 and msg.payload[436] < 256);
  assert(msg.payload[437] >= 0 and msg.payload[437] < 256);
  assert(msg.payload[438] >= 0 and msg.payload[438] < 256);
  assert(msg.payload[439] >= 0 and msg.payload[439] < 256);
  assert(msg.payload[440] >= 0 and msg.payload[440] < 256);
  assert(msg.payload[441] >= 0 and msg.payload[441] < 256);
  assert(msg.payload[442] >= 0 and msg.payload[442] < 256);
  assert(msg.payload[443] >= 0 and msg.payload[443] < 256);
  assert(msg.payload[444] >= 0 and msg.payload[444] < 256);
  assert(msg.payload[445] >= 0 and msg.payload[445] < 256);
  assert(msg.payload[446] >= 0 and msg.payload[446] < 256);
  assert(msg.payload[447] >= 0 and msg.payload[447] < 256);
  assert(msg.payload[448] >= 0 and msg.payload[448] < 256);
  assert(msg.payload[449] >= 0 and msg.payload[449] < 256);
  assert(msg.payload[450] >= 0 and msg.payload[450] < 256);
  assert(msg.payload[451] >= 0 and msg.payload[451] < 256);
  assert(msg.payload[452] >= 0 and msg.payload[452] < 256);
  assert(msg.payload[453] >= 0 and msg.payload[453] < 256);
  assert(msg.payload[454] >= 0 and msg.payload[454] < 256);
  assert(msg.payload[455] >= 0 and msg.payload[455] < 256);
  assert(msg.payload[456] >= 0 and msg.payload[456] < 256);
  assert(msg.payload[457] >= 0 and msg.payload[457] < 256);
  assert(msg.payload[458] >= 0 and msg.payload[458] < 256);
  assert(msg.payload[459] >= 0 and msg.payload[459] < 256);
  assert(msg.payload[460] >= 0 and msg.payload[460] < 256);
  assert(msg.payload[461] >= 0 and msg.payload[461] < 256);
  assert(msg.payload[462] >= 0 and msg.payload[462] < 256);
  assert(msg.payload[463] >= 0 and msg.payload[463] < 256);
  assert(msg.payload[464] >= 0 and msg.payload[464] < 256);
  assert(msg.payload[465] >= 0 and msg.payload[465] < 256);
  assert(msg.payload[466] >= 0 and msg.payload[466] < 256);
  assert(msg.payload[467] >= 0 and msg.payload[467] < 256);
  assert(msg.payload[468] >= 0 and msg.payload[468] < 256);
  assert(msg.payload[469] >= 0 and msg.payload[469] < 256);
  assert(msg.payload[470] >= 0 and msg.payload[470] < 256);
  assert(msg.payload[471] >= 0 and msg.payload[471] < 256);
  assert(msg.payload[472] >= 0 and msg.payload[472] < 256);
  assert(msg.payload[473] >= 0 and msg.payload[473] < 256);
  assert(msg.payload[474] >= 0 and msg.payload[474] < 256);
  assert(msg.payload[475] >= 0 and msg.payload[475] < 256);
  assert(msg.payload[476] >= 0 and msg.payload[476] < 256);
  assert(msg.payload[477] >= 0 and msg.payload[477] < 256);
  assert(msg.payload[478] >= 0 and msg.payload[478] < 256);
  assert(msg.payload[479] >= 0 and msg.payload[479] < 256);
  assert(msg.payload[480] >= 0 and msg.payload[480] < 256);
  assert(msg.payload[481] >= 0 and msg.payload[481] < 256);
  assert(msg.payload[482] >= 0 and msg.payload[482] < 256);
  assert(msg.payload[483] >= 0 and msg.payload[483] < 256);
  assert(msg.payload[484] >= 0 and msg.payload[484] < 256);
  assert(msg.payload[485] >= 0 and msg.payload[485] < 256);
  assert(msg.payload[486] >= 0 and msg.payload[486] < 256);
  assert(msg.payload[487] >= 0 and msg.payload[487] < 256);
  assert(msg.payload[488] >= 0 and msg.payload[488] < 256);
  assert(msg.payload[489] >= 0 and msg.payload[489] < 256);
  assert(msg.payload[490] >= 0 and msg.payload[490] < 256);
  assert(msg.payload[491] >= 0 and msg.payload[491] < 256);
  assert(msg.payload[492] >= 0 and msg.payload[492] < 256);
  assert(msg.payload[493] >= 0 and msg.payload[493] < 256);
  assert(msg.payload[494] >= 0 and msg.payload[494] < 256);
  assert(msg.payload[495] >= 0 and msg.payload[495] < 256);
  assert(msg.payload[496] >= 0 and msg.payload[496] < 256);
  assert(msg.payload[497] >= 0 and msg.payload[497] < 256);
  assert(msg.payload[498] >= 0 and msg.payload[498] < 256);
  assert(msg.payload[499] >= 0 and msg.payload[499] < 256);
  assert(msg.payload[500] >= 0 and msg.payload[500] < 256);
  assert(msg.payload[501] >= 0 and msg.payload[501] < 256);
  assert(msg.payload[502] >= 0 and msg.payload[502] < 256);
  assert(msg.payload[503] >= 0 and msg.payload[503] < 256);
  assert(msg.payload[504] >= 0 and msg.payload[504] < 256);
  assert(msg.payload[505] >= 0 and msg.payload[505] < 256);
  assert(msg.payload[506] >= 0 and msg.payload[506] < 256);
  assert(msg.payload[507] >= 0 and msg.payload[507] < 256);
  assert(msg.payload[508] >= 0 and msg.payload[508] < 256);
  assert(msg.payload[509] >= 0 and msg.payload[509] < 256);
  assert(msg.payload[510] >= 0 and msg.payload[510] < 256);
  assert(msg.payload[511] >= 0 and msg.payload[511] < 256);
  assert(msg.payload[512] >= 0 and msg.payload[512] < 256);
  assert(msg.payload[513] >= 0 and msg.payload[513] < 256);

  assert(msg.payload[0] = payload(clock, 0));
  assert(msg.payload[1] = payload(clock, 1));
  assert(msg.payload[2] = payload(clock, 2));
  assert(msg.payload[3] = payload(clock, 3));
  assert(msg.payload[4] = payload(clock, 4));
  assert(msg.payload[5] = payload(clock, 5));
  assert(msg.payload[6] = payload(clock, 6));
  assert(msg.payload[7] = payload(clock, 7));
  assert(msg.payload[8] = payload(clock, 8));
  assert(msg.payload[9] = payload(clock, 9));
  assert(msg.payload[10] = payload(clock, 10));
  assert(msg.payload[11] = payload(clock, 11));
  assert(msg.payload[12] = payload(clock, 12));
  assert(msg.payload[13] = payload(clock, 13));
  assert(msg.payload[14] = payload(clock, 14));
  assert(msg.payload[15] = payload(clock, 15));
  assert(msg.payload[16] = payload(clock, 16));
  assert(msg.payload[17] = payload(clock, 17));
  assert(msg.payload[18] = payload(clock, 18));
  assert(msg.payload[19] = payload(clock, 19));
  assert(msg.payload[20] = payload(clock, 20));
  assert(msg.payload[21] = payload(clock, 21));
  assert(msg.payload[22] = payload(clock, 22));
  assert(msg.payload[23] = payload(clock, 23));
  assert(msg.payload[24] = payload(clock, 24));
  assert(msg.payload[25] = payload(clock, 25));
  assert(msg.payload[26] = payload(clock, 26));
  assert(msg.payload[27] = payload(clock, 27));
  assert(msg.payload[28] = payload(clock, 28));
  assert(msg.payload[29] = payload(clock, 29));
  assert(msg.payload[30] = payload(clock, 30));
  assert(msg.payload[31] = payload(clock, 31));
  assert(msg.payload[32] = payload(clock, 32));
  assert(msg.payload[33] = payload(clock, 33));
  assert(msg.payload[34] = payload(clock, 34));
  assert(msg.payload[35] = payload(clock, 35));
  assert(msg.payload[36] = payload(clock, 36));
  assert(msg.payload[37] = payload(clock, 37));
  assert(msg.payload[38] = payload(clock, 38));
  assert(msg.payload[39] = payload(clock, 39));
  assert(msg.payload[40] = payload(clock, 40));
  assert(msg.payload[41] = payload(clock, 41));
  assert(msg.payload[42] = payload(clock, 42));
  assert(msg.payload[43] = payload(clock, 43));
  assert(msg.payload[44] = payload(clock, 44));
  assert(msg.payload[45] = payload(clock, 45));
  assert(msg.payload[46] = payload(clock, 46));
  assert(msg.payload[47] = payload(clock, 47));
  assert(msg.payload[48] = payload(clock, 48));
  assert(msg.payload[49] = payload(clock, 49));
  assert(msg.payload[50] = payload(clock, 50));
  assert(msg.payload[51] = payload(clock, 51));
  assert(msg.payload[52] = payload(clock, 52));
  assert(msg.payload[53] = payload(clock, 53));
  assert(msg.payload[54] = payload(clock, 54));
  assert(msg.payload[55] = payload(clock, 55));
  assert(msg.payload[56] = payload(clock, 56));
  assert(msg.payload[57] = payload(clock, 57));
  assert(msg.payload[58] = payload(clock, 58));
  assert(msg.payload[59] = payload(clock, 59));
  assert(msg.payload[60] = payload(clock, 60));
  assert(msg.payload[61] = payload(clock, 61));
  assert(msg.payload[62] = payload(clock, 62));
  assert(msg.payload[63] = payload(clock, 63));
  assert(msg.payload[64] = payload(clock, 64));
  assert(msg.payload[65] = payload(clock, 65));
  assert(msg.payload[66] = payload(clock, 66));
  assert(msg.payload[67] = payload(clock, 67));
  assert(msg.payload[68] = payload(clock, 68));
  assert(msg.payload[69] = payload(clock, 69));
  assert(msg.payload[70] = payload(clock, 70));
  assert(msg.payload[71] = payload(clock, 71));
  assert(msg.payload[72] = payload(clock, 72));
  assert(msg.payload[73] = payload(clock, 73));
  assert(msg.payload[74] = payload(clock, 74));
  assert(msg.payload[75] = payload(clock, 75));
  assert(msg.payload[76] = payload(clock, 76));
  assert(msg.payload[77] = payload(clock, 77));
  assert(msg.payload[78] = payload(clock, 78));
  assert(msg.payload[79] = payload(clock, 79));
  assert(msg.payload[80] = payload(clock, 80));
  assert(msg.payload[81] = payload(clock, 81));
  assert(msg.payload[82] = payload(clock, 82));
  assert(msg.payload[83] = payload(clock, 83));
  assert(msg.payload[84] = payload(clock, 84));
  assert(msg.payload[85] = payload(clock, 85));
  assert(msg.payload[86] = payload(clock, 86));
  assert(msg.payload[87] = payload(clock, 87));
  assert(msg.payload[88] = payload(clock, 88));
  assert(msg.payload[89] = payload(clock, 89));
  assert(msg.payload[90] = payload(clock, 90));
  assert(msg.payload[91] = payload(clock, 91));
  assert(msg.payload[92] = payload(clock, 92));
  assert(msg.payload[93] = payload(clock, 93));
  assert(msg.payload[94] = payload(clock, 94));
  assert(msg.payload[95] = payload(clock, 95));
  assert(msg.payload[96] = payload(clock, 96));
  assert(msg.payload[97] = payload(clock, 97));
  assert(msg.payload[98] = payload(clock, 98));
  assert(msg.payload[99] = payload(clock, 99));
  assert(msg.payload[100] = payload(clock, 100));
  assert(msg.payload[101] = payload(clock, 101));
  assert(msg.payload[102] = payload(clock, 102));
  assert(msg.payload[103] = payload(clock, 103));
  assert(msg.payload[104] = payload(clock, 104));
  assert(msg.payload[105] = payload(clock, 105));
  assert(msg.payload[106] = payload(clock, 106));
  assert(msg.payload[107] = payload(clock, 107));
  assert(msg.payload[108] = payload(clock, 108));
  assert(msg.payload[109] = payload(clock, 109));
  assert(msg.payload[110] = payload(clock, 110));
  assert(msg.payload[111] = payload(clock, 111));
  assert(msg.payload[112] = payload(clock, 112));
  assert(msg.payload[113] = payload(clock, 113));
  assert(msg.payload[114] = payload(clock, 114));
  assert(msg.payload[115] = payload(clock, 115));
  assert(msg.payload[116] = payload(clock, 116));
  assert(msg.payload[117] = payload(clock, 117));
  assert(msg.payload[118] = payload(clock, 118));
  assert(msg.payload[119] = payload(clock, 119));
  assert(msg.payload[120] = payload(clock, 120));
  assert(msg.payload[121] = payload(clock, 121));
  assert(msg.payload[122] = payload(clock, 122));
  assert(msg.payload[123] = payload(clock, 123));
  assert(msg.payload[124] = payload(clock, 124));
  assert(msg.payload[125] = payload(clock, 125));
  assert(msg.payload[126] = payload(clock, 126));
  assert(msg.payload[127] = payload(clock, 127));
  assert(msg.payload[128] = payload(clock, 128));
  assert(msg.payload[129] = payload(clock, 129));
  assert(msg.payload[130] = payload(clock, 130));
  assert(msg.payload[131] = payload(clock, 131));
  assert(msg.payload[132] = payload(clock, 132));
  assert(msg.payload[133] = payload(clock, 133));
  assert(msg.payload[134] = payload(clock, 134));
  assert(msg.payload[135] = payload(clock, 135));
  assert(msg.payload[136] = payload(clock, 136));
  assert(msg.payload[137] = payload(clock, 137));
  assert(msg.payload[138] = payload(clock, 138));
  assert(msg.payload[139] = payload(clock, 139));
  assert(msg.payload[140] = payload(clock, 140));
  assert(msg.payload[141] = payload(clock, 141));
  assert(msg.payload[142] = payload(clock, 142));
  assert(msg.payload[143] = payload(clock, 143));
  assert(msg.payload[144] = payload(clock, 144));
  assert(msg.payload[145] = payload(clock, 145));
  assert(msg.payload[146] = payload(clock, 146));
  assert(msg.payload[147] = payload(clock, 147));
  assert(msg.payload[148] = payload(clock, 148));
  assert(msg.payload[149] = payload(clock, 149));
  assert(msg.payload[150] = payload(clock, 150));
  assert(msg.payload[151] = payload(clock, 151));
  assert(msg.payload[152] = payload(clock, 152));
  assert(msg.payload[153] = payload(clock, 153));
  assert(msg.payload[154] = payload(clock, 154));
  assert(msg.payload[155] = payload(clock, 155));
  assert(msg.payload[156] = payload(clock, 156));
  assert(msg.payload[157] = payload(clock, 157));
  assert(msg.payload[158] = payload(clock, 158));
  assert(msg.payload[159] = payload(clock, 159));
  assert(msg.payload[160] = payload(clock, 160));
  assert(msg.payload[161] = payload(clock, 161));
  assert(msg.payload[162] = payload(clock, 162));
  assert(msg.payload[163] = payload(clock, 163));
  assert(msg.payload[164] = payload(clock, 164));
  assert(msg.payload[165] = payload(clock, 165));
  assert(msg.payload[166] = payload(clock, 166));
  assert(msg.payload[167] = payload(clock, 167));
  assert(msg.payload[168] = payload(clock, 168));
  assert(msg.payload[169] = payload(clock, 169));
  assert(msg.payload[170] = payload(clock, 170));
  assert(msg.payload[171] = payload(clock, 171));
  assert(msg.payload[172] = payload(clock, 172));
  assert(msg.payload[173] = payload(clock, 173));
  assert(msg.payload[174] = payload(clock, 174));
  assert(msg.payload[175] = payload(clock, 175));
  assert(msg.payload[176] = payload(clock, 176));
  assert(msg.payload[177] = payload(clock, 177));
  assert(msg.payload[178] = payload(clock, 178));
  assert(msg.payload[179] = payload(clock, 179));
  assert(msg.payload[180] = payload(clock, 180));
  assert(msg.payload[181] = payload(clock, 181));
  assert(msg.payload[182] = payload(clock, 182));
  assert(msg.payload[183] = payload(clock, 183));
  assert(msg.payload[184] = payload(clock, 184));
  assert(msg.payload[185] = payload(clock, 185));
  assert(msg.payload[186] = payload(clock, 186));
  assert(msg.payload[187] = payload(clock, 187));
  assert(msg.payload[188] = payload(clock, 188));
  assert(msg.payload[189] = payload(clock, 189));
  assert(msg.payload[190] = payload(clock, 190));
  assert(msg.payload[191] = payload(clock, 191));
  assert(msg.payload[192] = payload(clock, 192));
  assert(msg.payload[193] = payload(clock, 193));
  assert(msg.payload[194] = payload(clock, 194));
  assert(msg.payload[195] = payload(clock, 195));
  assert(msg.payload[196] = payload(clock, 196));
  assert(msg.payload[197] = payload(clock, 197));
  assert(msg.payload[198] = payload(clock, 198));
  assert(msg.payload[199] = payload(clock, 199));
  assert(msg.payload[200] = payload(clock, 200));
  assert(msg.payload[201] = payload(clock, 201));
  assert(msg.payload[202] = payload(clock, 202));
  assert(msg.payload[203] = payload(clock, 203));
  assert(msg.payload[204] = payload(clock, 204));
  assert(msg.payload[205] = payload(clock, 205));
  assert(msg.payload[206] = payload(clock, 206));
  assert(msg.payload[207] = payload(clock, 207));
  assert(msg.payload[208] = payload(clock, 208));
  assert(msg.payload[209] = payload(clock, 209));
  assert(msg.payload[210] = payload(clock, 210));
  assert(msg.payload[211] = payload(clock, 211));
  assert(msg.payload[212] = payload(clock, 212));
  assert(msg.payload[213] = payload(clock, 213));
  assert(msg.payload[214] = payload(clock, 214));
  assert(msg.payload[215] = payload(clock, 215));
  assert(msg.payload[216] = payload(clock, 216));
  assert(msg.payload[217] = payload(clock, 217));
  assert(msg.payload[218] = payload(clock, 218));
  assert(msg.payload[219] = payload(clock, 219));
  assert(msg.payload[220] = payload(clock, 220));
  assert(msg.payload[221] = payload(clock, 221));
  assert(msg.payload[222] = payload(clock, 222));
  assert(msg.payload[223] = payload(clock, 223));
  assert(msg.payload[224] = payload(clock, 224));
  assert(msg.payload[225] = payload(clock, 225));
  assert(msg.payload[226] = payload(clock, 226));
  assert(msg.payload[227] = payload(clock, 227));
  assert(msg.payload[228] = payload(clock, 228));
  assert(msg.payload[229] = payload(clock, 229));
  assert(msg.payload[230] = payload(clock, 230));
  assert(msg.payload[231] = payload(clock, 231));
  assert(msg.payload[232] = payload(clock, 232));
  assert(msg.payload[233] = payload(clock, 233));
  assert(msg.payload[234] = payload(clock, 234));
  assert(msg.payload[235] = payload(clock, 235));
  assert(msg.payload[236] = payload(clock, 236));
  assert(msg.payload[237] = payload(clock, 237));
  assert(msg.payload[238] = payload(clock, 238));
  assert(msg.payload[239] = payload(clock, 239));
  assert(msg.payload[240] = payload(clock, 240));
  assert(msg.payload[241] = payload(clock, 241));
  assert(msg.payload[242] = payload(clock, 242));
  assert(msg.payload[243] = payload(clock, 243));
  assert(msg.payload[244] = payload(clock, 244));
  assert(msg.payload[245] = payload(clock, 245));
  assert(msg.payload[246] = payload(clock, 246));
  assert(msg.payload[247] = payload(clock, 247));
  assert(msg.payload[248] = payload(clock, 248));
  assert(msg.payload[249] = payload(clock, 249));
  assert(msg.payload[250] = payload(clock, 250));
  assert(msg.payload[251] = payload(clock, 251));
  assert(msg.payload[252] = payload(clock, 252));
  assert(msg.payload[253] = payload(clock, 253));
  assert(msg.payload[254] = payload(clock, 254));
  assert(msg.payload[255] = payload(clock, 255));
  assert(msg.payload[256] = payload(clock, 256));
  assert(msg.payload[257] = payload(clock, 257));
  assert(msg.payload[258] = payload(clock, 258));
  assert(msg.payload[259] = payload(clock, 259));
  assert(msg.payload[260] = payload(clock, 260));
  assert(msg.payload[261] = payload(clock, 261));
  assert(msg.payload[262] = payload(clock, 262));
  assert(msg.payload[263] = payload(clock, 263));
  assert(msg.payload[264] = payload(clock, 264));
  assert(msg.payload[265] = payload(clock, 265));
  assert(msg.payload[266] = payload(clock, 266));
  assert(msg.payload[267] = payload(clock, 267));
  assert(msg.payload[268] = payload(clock, 268));
  assert(msg.payload[269] = payload(clock, 269));
  assert(msg.payload[270] = payload(clock, 270));
  assert(msg.payload[271] = payload(clock, 271));
  assert(msg.payload[272] = payload(clock, 272));
  assert(msg.payload[273] = payload(clock, 273));
  assert(msg.payload[274] = payload(clock, 274));
  assert(msg.payload[275] = payload(clock, 275));
  assert(msg.payload[276] = payload(clock, 276));
  assert(msg.payload[277] = payload(clock, 277));
  assert(msg.payload[278] = payload(clock, 278));
  assert(msg.payload[279] = payload(clock, 279));
  assert(msg.payload[280] = payload(clock, 280));
  assert(msg.payload[281] = payload(clock, 281));
  assert(msg.payload[282] = payload(clock, 282));
  assert(msg.payload[283] = payload(clock, 283));
  assert(msg.payload[284] = payload(clock, 284));
  assert(msg.payload[285] = payload(clock, 285));
  assert(msg.payload[286] = payload(clock, 286));
  assert(msg.payload[287] = payload(clock, 287));
  assert(msg.payload[288] = payload(clock, 288));
  assert(msg.payload[289] = payload(clock, 289));
  assert(msg.payload[290] = payload(clock, 290));
  assert(msg.payload[291] = payload(clock, 291));
  assert(msg.payload[292] = payload(clock, 292));
  assert(msg.payload[293] = payload(clock, 293));
  assert(msg.payload[294] = payload(clock, 294));
  assert(msg.payload[295] = payload(clock, 295));
  assert(msg.payload[296] = payload(clock, 296));
  assert(msg.payload[297] = payload(clock, 297));
  assert(msg.payload[298] = payload(clock, 298));
  assert(msg.payload[299] = payload(clock, 299));
  assert(msg.payload[300] = payload(clock, 300));
  assert(msg.payload[301] = payload(clock, 301));
  assert(msg.payload[302] = payload(clock, 302));
  assert(msg.payload[303] = payload(clock, 303));
  assert(msg.payload[304] = payload(clock, 304));
  assert(msg.payload[305] = payload(clock, 305));
  assert(msg.payload[306] = payload(clock, 306));
  assert(msg.payload[307] = payload(clock, 307));
  assert(msg.payload[308] = payload(clock, 308));
  assert(msg.payload[309] = payload(clock, 309));
  assert(msg.payload[310] = payload(clock, 310));
  assert(msg.payload[311] = payload(clock, 311));
  assert(msg.payload[312] = payload(clock, 312));
  assert(msg.payload[313] = payload(clock, 313));
  assert(msg.payload[314] = payload(clock, 314));
  assert(msg.payload[315] = payload(clock, 315));
  assert(msg.payload[316] = payload(clock, 316));
  assert(msg.payload[317] = payload(clock, 317));
  assert(msg.payload[318] = payload(clock, 318));
  assert(msg.payload[319] = payload(clock, 319));
  assert(msg.payload[320] = payload(clock, 320));
  assert(msg.payload[321] = payload(clock, 321));
  assert(msg.payload[322] = payload(clock, 322));
  assert(msg.payload[323] = payload(clock, 323));
  assert(msg.payload[324] = payload(clock, 324));
  assert(msg.payload[325] = payload(clock, 325));
  assert(msg.payload[326] = payload(clock, 326));
  assert(msg.payload[327] = payload(clock, 327));
  assert(msg.payload[328] = payload(clock, 328));
  assert(msg.payload[329] = payload(clock, 329));
  assert(msg.payload[330] = payload(clock, 330));
  assert(msg.payload[331] = payload(clock, 331));
  assert(msg.payload[332] = payload(clock, 332));
  assert(msg.payload[333] = payload(clock, 333));
  assert(msg.payload[334] = payload(clock, 334));
  assert(msg.payload[335] = payload(clock, 335));
  assert(msg.payload[336] = payload(clock, 336));
  assert(msg.payload[337] = payload(clock, 337));
  assert(msg.payload[338] = payload(clock, 338));
  assert(msg.payload[339] = payload(clock, 339));
  assert(msg.payload[340] = payload(clock, 340));
  assert(msg.payload[341] = payload(clock, 341));
  assert(msg.payload[342] = payload(clock, 342));
  assert(msg.payload[343] = payload(clock, 343));
  assert(msg.payload[344] = payload(clock, 344));
  assert(msg.payload[345] = payload(clock, 345));
  assert(msg.payload[346] = payload(clock, 346));
  assert(msg.payload[347] = payload(clock, 347));
  assert(msg.payload[348] = payload(clock, 348));
  assert(msg.payload[349] = payload(clock, 349));
  assert(msg.payload[350] = payload(clock, 350));
  assert(msg.payload[351] = payload(clock, 351));
  assert(msg.payload[352] = payload(clock, 352));
  assert(msg.payload[353] = payload(clock, 353));
  assert(msg.payload[354] = payload(clock, 354));
  assert(msg.payload[355] = payload(clock, 355));
  assert(msg.payload[356] = payload(clock, 356));
  assert(msg.payload[357] = payload(clock, 357));
  assert(msg.payload[358] = payload(clock, 358));
  assert(msg.payload[359] = payload(clock, 359));
  assert(msg.payload[360] = payload(clock, 360));
  assert(msg.payload[361] = payload(clock, 361));
  assert(msg.payload[362] = payload(clock, 362));
  assert(msg.payload[363] = payload(clock, 363));
  assert(msg.payload[364] = payload(clock, 364));
  assert(msg.payload[365] = payload(clock, 365));
  assert(msg.payload[366] = payload(clock, 366));
  assert(msg.payload[367] = payload(clock, 367));
  assert(msg.payload[368] = payload(clock, 368));
  assert(msg.payload[369] = payload(clock, 369));
  assert(msg.payload[370] = payload(clock, 370));
  assert(msg.payload[371] = payload(clock, 371));
  assert(msg.payload[372] = payload(clock, 372));
  assert(msg.payload[373] = payload(clock, 373));
  assert(msg.payload[374] = payload(clock, 374));
  assert(msg.payload[375] = payload(clock, 375));
  assert(msg.payload[376] = payload(clock, 376));
  assert(msg.payload[377] = payload(clock, 377));
  assert(msg.payload[378] = payload(clock, 378));
  assert(msg.payload[379] = payload(clock, 379));
  assert(msg.payload[380] = payload(clock, 380));
  assert(msg.payload[381] = payload(clock, 381));
  assert(msg.payload[382] = payload(clock, 382));
  assert(msg.payload[383] = payload(clock, 383));
  assert(msg.payload[384] = payload(clock, 384));
  assert(msg.payload[385] = payload(clock, 385));
  assert(msg.payload[386] = payload(clock, 386));
  assert(msg.payload[387] = payload(clock, 387));
  assert(msg.payload[388] = payload(clock, 388));
  assert(msg.payload[389] = payload(clock, 389));
  assert(msg.payload[390] = payload(clock, 390));
  assert(msg.payload[391] = payload(clock, 391));
  assert(msg.payload[392] = payload(clock, 392));
  assert(msg.payload[393] = payload(clock, 393));
  assert(msg.payload[394] = payload(clock, 394));
  assert(msg.payload[395] = payload(clock, 395));
  assert(msg.payload[396] = payload(clock, 396));
  assert(msg.payload[397] = payload(clock, 397));
  assert(msg.payload[398] = payload(clock, 398));
  assert(msg.payload[399] = payload(clock, 399));
  assert(msg.payload[400] = payload(clock, 400));
  assert(msg.payload[401] = payload(clock, 401));
  assert(msg.payload[402] = payload(clock, 402));
  assert(msg.payload[403] = payload(clock, 403));
  assert(msg.payload[404] = payload(clock, 404));
  assert(msg.payload[405] = payload(clock, 405));
  assert(msg.payload[406] = payload(clock, 406));
  assert(msg.payload[407] = payload(clock, 407));
  assert(msg.payload[408] = payload(clock, 408));
  assert(msg.payload[409] = payload(clock, 409));
  assert(msg.payload[410] = payload(clock, 410));
  assert(msg.payload[411] = payload(clock, 411));
  assert(msg.payload[412] = payload(clock, 412));
  assert(msg.payload[413] = payload(clock, 413));
  assert(msg.payload[414] = payload(clock, 414));
  assert(msg.payload[415] = payload(clock, 415));
  assert(msg.payload[416] = payload(clock, 416));
  assert(msg.payload[417] = payload(clock, 417));
  assert(msg.payload[418] = payload(clock, 418));
  assert(msg.payload[419] = payload(clock, 419));
  assert(msg.payload[420] = payload(clock, 420));
  assert(msg.payload[421] = payload(clock, 421));
  assert(msg.payload[422] = payload(clock, 422));
  assert(msg.payload[423] = payload(clock, 423));
  assert(msg.payload[424] = payload(clock, 424));
  assert(msg.payload[425] = payload(clock, 425));
  assert(msg.payload[426] = payload(clock, 426));
  assert(msg.payload[427] = payload(clock, 427));
  assert(msg.payload[428] = payload(clock, 428));
  assert(msg.payload[429] = payload(clock, 429));
  assert(msg.payload[430] = payload(clock, 430));
  assert(msg.payload[431] = payload(clock, 431));
  assert(msg.payload[432] = payload(clock, 432));
  assert(msg.payload[433] = payload(clock, 433));
  assert(msg.payload[434] = payload(clock, 434));
  assert(msg.payload[435] = payload(clock, 435));
  assert(msg.payload[436] = payload(clock, 436));
  assert(msg.payload[437] = payload(clock, 437));
  assert(msg.payload[438] = payload(clock, 438));
  assert(msg.payload[439] = payload(clock, 439));
  assert(msg.payload[440] = payload(clock, 440));
  assert(msg.payload[441] = payload(clock, 441));
  assert(msg.payload[442] = payload(clock, 442));
  assert(msg.payload[443] = payload(clock, 443));
  assert(msg.payload[444] = payload(clock, 444));
  assert(msg.payload[445] = payload(clock, 445));
  assert(msg.payload[446] = payload(clock, 446));
  assert(msg.payload[447] = payload(clock, 447));
  assert(msg.payload[448] = payload(clock, 448));
  assert(msg.payload[449] = payload(clock, 449));
  assert(msg.payload[450] = payload(clock, 450));
  assert(msg.payload[451] = payload(clock, 451));
  assert(msg.payload[452] = payload(clock, 452));
  assert(msg.payload[453] = payload(clock, 453));
  assert(msg.payload[454] = payload(clock, 454));
  assert(msg.payload[455] = payload(clock, 455));
  assert(msg.payload[456] = payload(clock, 456));
  assert(msg.payload[457] = payload(clock, 457));
  assert(msg.payload[458] = payload(clock, 458));
  assert(msg.payload[459] = payload(clock, 459));
  assert(msg.payload[460] = payload(clock, 460));
  assert(msg.payload[461] = payload(clock, 461));
  assert(msg.payload[462] = payload(clock, 462));
  assert(msg.payload[463] = payload(clock, 463));
  assert(msg.payload[464] = payload(clock, 464));
  assert(msg.payload[465] = payload(clock, 465));
  assert(msg.payload[466] = payload(clock, 466));
  assert(msg.payload[467] = payload(clock, 467));
  assert(msg.payload[468] = payload(clock, 468));
  assert(msg.payload[469] = payload(clock, 469));
  assert(msg.payload[470] = payload(clock, 470));
  assert(msg.payload[471] = payload(clock, 471));
  assert(msg.payload[472] = payload(clock, 472));
  assert(msg.payload[473] = payload(clock, 473));
  assert(msg.payload[474] = payload(clock, 474));
  assert(msg.payload[475] = payload(clock, 475));
  assert(msg.payload[476] = payload(clock, 476));
  assert(msg.payload[477] = payload(clock, 477));
  assert(msg.payload[478] = payload(clock, 478));
  assert(msg.payload[479] = payload(clock, 479));
  assert(msg.payload[480] = payload(clock, 480));
  assert(msg.payload[481] = payload(clock, 481));
  assert(msg.payload[482] = payload(clock, 482));
  assert(msg.payload[483] = payload(clock, 483));
  assert(msg.payload[484] = payload(clock, 484));
  assert(msg.payload[485] = payload(clock, 485));
  assert(msg.payload[486] = payload(clock, 486));
  assert(msg.payload[487] = payload(clock, 487));
  assert(msg.payload[488] = payload(clock, 488));
  assert(msg.payload[489] = payload(clock, 489));
  assert(msg.payload[490] = payload(clock, 490));
  assert(msg.payload[491] = payload(clock, 491));
  assert(msg.payload[492] = payload(clock, 492));
  assert(msg.payload[493] = payload(clock, 493));
  assert(msg.payload[494] = payload(clock, 494));
  assert(msg.payload[495] = payload(clock, 495));
  assert(msg.payload[496] = payload(clock, 496));
  assert(msg.payload[497] = payload(clock, 497));
  assert(msg.payload[498] = payload(clock, 498));
  assert(msg.payload[499] = payload(clock, 499));
  assert(msg.payload[500] = payload(clock, 500));
  assert(msg.payload[501] = payload(clock, 501));
  assert(msg.payload[502] = payload(clock, 502));
  assert(msg.payload[503] = payload(clock, 503));
  assert(msg.payload[504] = payload(clock, 504));
  assert(msg.payload[505] = payload(clock, 505));
  assert(msg.payload[506] = payload(clock, 506));
  assert(msg.payload[507] = payload(clock, 507));
  assert(msg.payload[508] = payload(clock, 508));
  assert(msg.payload[509] = payload(clock, 509));
  assert(msg.payload[510] = payload(clock, 510));
  assert(msg.payload[511] = payload(clock, 511));
  assert(msg.payload[512] = payload(clock, 512));
  assert(msg.payload[513] = payload(clock, 513));


 -- Block sizes are all 512 execept for the last in the file.
 current_size = if (fuzz_block_size(clock))
   then fuzzy_block_size(clock)
   else (0 -> if (msg.opcode = opcode_data)
       then (if ((pre remaining_size) < 512) then (pre remaining_size) else 512)
       else 0);
 remaining_size = file_size() -> ((pre remaining_size) - current_size);

 -- Block numbers start with 1 and increment at each data message (sent or acked)
 block_number = if (fuzz_block_number(clock))
   then fuzzy_block_number(clock)
   else (0 -> (pre block_number) + (if (msg.opcode = opcode_data or msg.opcode = opcode_ack) then 1 else 0));

 rrq_constraint = (msg.opcode = opcode_rrq)
   and (payload_length = 2 + filename_length() + 1 + mode_length() + 1)
   and (payload(clock, filename_length()) = 0)
   and mode_constraint(clock, 2 + filename_length() + 1);

 wrq_constraint = (msg.opcode = opcode_wrq) 
   and (payload_length = 2 + filename_length() + 1 + mode_length() + 1)
   and (payload(clock, filename_length()) = 0)
   and mode_constraint(clock, 2 + filename_length() + 1);

 data_constraint = (msg.opcode = opcode_data)
   and (payload_length = 2 + current_size)
   and ((256 * payload(clock, 0)) + payload(clock, 1) = block_number);

 ack_constraint = (msg.opcode = opcode_ack)
   and (payload_length = 2)
   and ((256 * payload(clock, 0)) + payload(clock, 1) = block_number);

 error_constraint = (msg.opcode = opcode_error)
   and (payload_length = 2 + error_msg_length(clock) + 1)
   and (payload(clock, 2 + error_msg_length(clock)) = 0);

 -- Fuzz the server with a RRQ followed by a series of either ACK or ERROR 
 fuzz_rrq = rrq_constraint -> (ack_constraint or error_constraint);
 fuzz_rrq_protocol = (historically(fuzz_rrq) and once(ack_constraint) and historically(not fuzz_block_number(clock)));

 -- Fuzz the server with a WRQ followed by a series of either DATA or ERROR 
 fuzz_wrq = wrq_constraint -> (data_constraint or error_constraint);
 fuzz_wrq_protocol = (historically(fuzz_wrq) and once(data_constraint) and remaining_size = 0
                          and historically(not fuzz_block_number(clock)) and historically(not fuzz_block_size(clock)));

 -- Fuzz the server with a RRQ followed by a series of either ACK or ERROR with fuzzy block numbers
 fuzz_rrq_protocol_fuzzy_block_numbers = not (historically(fuzz_rrq) and once(ack_constraint));

 -- Fuzz the server with a WRQ followed by a series of either DATA or ERROR and fuzzy block numbers 
 fuzz_wrq_protocol_fuzzy_block_numbers = not (historically(fuzz_wrq) and once(data_constraint) and remaining_size = 0
                          and historically(not fuzz_block_size(clock)));

 -- Fuzz the server with a WRQ followed by a series of either DATA or ERROR and fuzzy block numbers 
 fuzz_wrq_protocol_fuzzy_block_sizes = not (historically(fuzz_wrq) and once(data_constraint) and remaining_size = 0
                          and historically(not fuzz_block_number(clock)));

 --%PROPERTY fuzz_rrq_protocol;
 --%PROPERTY fuzz_wrq_protocol;
 -- -- %PROPERTY fuzz_rrq_protocol_fuzzy_block_numbers;
 -- -- %PROPERTY fuzz_wrq_protocol_fuzzy_block_numbers;
 -- -- %PROPERTY fuzz_wrq_protocol_fuzzy_block_sizes;

tel
