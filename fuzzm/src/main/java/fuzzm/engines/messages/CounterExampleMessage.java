package jfuzz.engines.messages;

import jfuzz.engines.EngineName;
import jfuzz.lustre.BooleanCtx;
import jfuzz.lustre.evaluation.FunctionLookupEV;
import jfuzz.solver.SolverResults;
import jfuzz.util.RatSignal;

/**
 * The Counter Example message contains a specific solution to the
 * constraint.
 * 
 * Generated by the Solver Engine.
 * Consumed by the Generalization Engine.
 */
public class CounterExampleMessage extends FeatureMessage {

	public RatSignal counterExample;
	public FunctionLookupEV fns;
	public BooleanCtx   hyp;
	public BooleanCtx   prop;
	public RatSignal generalizationTarget;
	
	public CounterExampleMessage(EngineName source, FeatureID id, BooleanCtx hyp, BooleanCtx  prop, RatSignal generalizationTarget, SolverResults sr, long sequence) {
		super(source,QueueName.CounterExampleMessage,id,sequence);
		//assert(target.size() > 0);
		this.counterExample = sr.cex;
		this.fns = sr.fns;
		this.hyp = hyp;
		this.prop = prop;
		this.generalizationTarget = generalizationTarget;
	}
	
	public CounterExampleMessage(EngineName source, ConstraintMessage m, SolverResults sr) {
		this(source, m.id,m.hyp,m.prop,m.generalizationTarget,sr,m.sequence);
	}
	
	@Override
	public void handleAccept(MessageHandler handler) {
		handler.handleMessage(this);
	}
	
	@Override
	public String toString() {
		return "Message: [CeX] " + sequence + ":" + id; // + " :\n" + counterExample.toString();
	}

	@Override
	public int bytes() {
		return 1 + counterExample.bytes();
	}

}
